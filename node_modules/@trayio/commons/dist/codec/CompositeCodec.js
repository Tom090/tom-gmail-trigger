"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompositeCodec = void 0;
const E = __importStar(require("fp-ts/lib/Either"));
const function_1 = require("fp-ts/function");
class CompositeCodec {
    innerCodec;
    outerCodec;
    static fromCodecs(innerCodec, outerCodec) {
        return new CompositeCodec(innerCodec, outerCodec);
    }
    constructor(innerCodec, outerCodec) {
        this.innerCodec = innerCodec;
        this.outerCodec = outerCodec;
    }
    encode(value) {
        return this.outerCodec.encode(this.innerCodec.encode(value));
    }
    decode(value) {
        return (0, function_1.pipe)(this.outerCodec.decode(value), E.chain((decodedValue) => this.innerCodec.decode(decodedValue)));
    }
}
exports.CompositeCodec = CompositeCodec;
