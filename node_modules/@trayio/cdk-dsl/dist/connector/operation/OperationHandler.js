"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationHandlerType = exports.OperationHandlerResult = exports.OperationHandlerError = exports.TriggerOperationHttpResponse = void 0;
const Result_1 = require("@trayio/commons/result/Result");
exports.TriggerOperationHttpResponse = {
    withStatusCode: (statusCode) => ({
        status_code: statusCode,
        headers: {},
    }),
    withStatusCodeAndHeaders: (statusCode, headers) => ({
        status_code: statusCode,
        headers,
    }),
    withStatusCodeAndBody: (statusCode, body) => ({
        status_code: statusCode,
        headers: {},
        body,
    }),
    withAllFields: (statusCode, headers, body) => ({
        status_code: statusCode,
        headers,
        body,
    }),
};
exports.OperationHandlerError = {
    connectorError: (message, response) => ({
        _tag: 'ConnectorError',
        message,
        response,
    }),
    apiError: (message, response) => ({
        _tag: 'ApiError',
        message,
        response,
    }),
    userInputError: (message, response) => ({
        _tag: 'UserInputError',
        message,
        response,
    }),
    oauthRefreshError: (message, response) => ({
        _tag: 'OauthRefreshError',
        message,
        response,
    }),
    skipTriggerError: (message, response) => ({
        _tag: 'SkipTriggerError',
        message,
        response,
    }),
};
exports.OperationHandlerResult = Result_1.Result;
var OperationHandlerType;
(function (OperationHandlerType) {
    OperationHandlerType["Regular"] = "regular";
    OperationHandlerType["TriggerCreate"] = "trigger-create";
    OperationHandlerType["TriggerResponse"] = "trigger-response";
    OperationHandlerType["TriggerRequest"] = "trigger-request";
    OperationHandlerType["TriggerDestroy"] = "trigger-destroy";
})(OperationHandlerType || (exports.OperationHandlerType = OperationHandlerType = {}));
