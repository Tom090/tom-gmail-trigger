"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationGlobalConfigHttp = void 0;
const O = __importStar(require("fp-ts/Option"));
const function_1 = require("fp-ts/function");
class OperationGlobalConfigHttp {
    baseUrl;
    bearerToken;
    headers;
    _tag = 'OperationGlobalConfigHttp';
    static create() {
        return new OperationGlobalConfigHttp(O.none, O.none, []);
    }
    constructor(baseUrl, bearerToken, headers) {
        this.baseUrl = baseUrl;
        this.bearerToken = bearerToken;
        this.headers = headers;
    }
    withBaseUrl(baseUrl) {
        return new OperationGlobalConfigHttp(O.some(baseUrl), this.bearerToken, this.headers);
    }
    withBearerToken(token) {
        return new OperationGlobalConfigHttp(this.baseUrl, O.some(token), this.headers);
    }
    addHeader(header) {
        return (0, function_1.pipe)(this.headers, (headers) => new OperationGlobalConfigHttp(this.baseUrl, this.bearerToken, [
            ...headers,
            header,
        ]));
    }
}
exports.OperationGlobalConfigHttp = OperationGlobalConfigHttp;
