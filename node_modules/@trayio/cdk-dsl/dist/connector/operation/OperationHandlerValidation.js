"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationHandlerOutputValidationConditionConfiguration = exports.OperationHandlerOutputValidationErrorMessageConfiguration = exports.OperationHandlerOutputValidation = exports.OperationHandlerInputValidationConditionConfiguration = exports.OperationHandlerInputValidationErrorMessageConfiguration = exports.OperationHandlerInputValidation = exports.OperationHandlerValidation = void 0;
class OperationHandlerValidation {
    static emptyValidation() {
        return new OperationHandlerValidation([], []);
    }
    inputValidation;
    outputValidation;
    constructor(inputValidation, outputValidation) {
        this.inputValidation = inputValidation;
        this.outputValidation = outputValidation;
    }
    addInputValidation(inputValidation) {
        return new OperationHandlerValidation(this.inputValidation.concat([inputValidation]), this.outputValidation);
    }
    addOutputValidation(outputValidation) {
        return new OperationHandlerValidation(this.inputValidation, this.outputValidation.concat([outputValidation]));
    }
}
exports.OperationHandlerValidation = OperationHandlerValidation;
class OperationHandlerInputValidation {
    condition;
    errorMessage;
    constructor(condition, errorMessage) {
        this.condition = condition;
        this.errorMessage = errorMessage;
    }
}
exports.OperationHandlerInputValidation = OperationHandlerInputValidation;
class OperationHandlerInputValidationErrorMessageConfiguration {
    condition;
    constructor(condition) {
        this.condition = condition;
    }
    errorMessage(errorMessage) {
        return new OperationHandlerInputValidation(this.condition, errorMessage);
    }
}
exports.OperationHandlerInputValidationErrorMessageConfiguration = OperationHandlerInputValidationErrorMessageConfiguration;
class OperationHandlerInputValidationConditionConfiguration {
    condition(condition) {
        return new OperationHandlerInputValidationErrorMessageConfiguration(condition);
    }
}
exports.OperationHandlerInputValidationConditionConfiguration = OperationHandlerInputValidationConditionConfiguration;
class OperationHandlerOutputValidation {
    condition;
    errorMessage;
    constructor(condition, errorMessage) {
        this.condition = condition;
        this.errorMessage = errorMessage;
    }
}
exports.OperationHandlerOutputValidation = OperationHandlerOutputValidation;
class OperationHandlerOutputValidationErrorMessageConfiguration {
    condition;
    constructor(condition) {
        this.condition = condition;
    }
    errorMessage(errorMessage) {
        return new OperationHandlerOutputValidation(this.condition, errorMessage);
    }
}
exports.OperationHandlerOutputValidationErrorMessageConfiguration = OperationHandlerOutputValidationErrorMessageConfiguration;
class OperationHandlerOutputValidationConditionConfiguration {
    condition(condition) {
        return new OperationHandlerOutputValidationErrorMessageConfiguration(condition);
    }
}
exports.OperationHandlerOutputValidationConditionConfiguration = OperationHandlerOutputValidationConditionConfiguration;
