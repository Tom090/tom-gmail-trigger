import { OperationHandler } from '@trayio/cdk-dsl/connector/operation/OperationHandlerSetup';
import { OperationHandlerAuth } from '@trayio/cdk-dsl/connector/operation/OperationHandler';
import { HttpClient } from '@trayio/commons/http/HttpClient';
import { FileStorage } from '@trayio/commons/file/File';
import { OperationExecution } from './OperationExecution';
import { OperationHandlerInvocationFactory } from './OperationHandlerInvocationFactory';
export declare class OperationExecutionFactory {
    private operationExecutionValidationFactory;
    private httpOperationExecutionFactory;
    private compositeOperationExecutionFactory;
    constructor(httpClient: HttpClient, fileStorage: FileStorage, operationHandlerInvocationFactory: OperationHandlerInvocationFactory);
    executionFrom<AUTH extends OperationHandlerAuth<unknown, unknown>, IN, OUT>(handler: OperationHandler<AUTH, IN, OUT>): OperationExecution<AUTH, IN, OUT>;
    private executionFromImplementation;
}
//# sourceMappingURL=OperationExecutionFactory.d.ts.map