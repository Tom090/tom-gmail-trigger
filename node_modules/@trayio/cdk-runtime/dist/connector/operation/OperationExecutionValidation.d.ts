import { OperationHandlerAuth, OperationHandlerContext, OperationHandlerResult, OperationHandlerType } from '@trayio/cdk-dsl/connector/operation/OperationHandler';
import { OperationHandlerValidation } from '@trayio/cdk-dsl/connector/operation/OperationHandlerValidation';
import { OperationExecution } from './OperationExecution';
export declare class OperationExecutionValidation<AUTH extends OperationHandlerAuth<unknown, unknown>, IN, OUT> implements OperationExecution<AUTH, IN, OUT> {
    private handlerValidation;
    private execution;
    handlerType: OperationHandlerType;
    constructor(handlerValidation: OperationHandlerValidation<AUTH, IN, OUT>, execution: OperationExecution<AUTH, IN, OUT>);
    execute(ctx: OperationHandlerContext<AUTH>, input: IN): Promise<OperationHandlerResult<OUT>>;
}
//# sourceMappingURL=OperationExecutionValidation.d.ts.map