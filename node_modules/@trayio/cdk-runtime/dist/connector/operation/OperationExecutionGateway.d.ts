import * as O from 'fp-ts/Option';
import { OperationHandlerAuth, OperationHandlerReference } from '@trayio/cdk-dsl/connector/operation/OperationHandler';
import { HttpClient } from '@trayio/commons/http/HttpClient';
import { FileStorage } from '@trayio/commons/file/File';
import { OperationHandlerInvocationFactory } from './OperationHandlerInvocationFactory';
import { OperationExecution } from './OperationExecution';
export declare class OperationExecutionGateway {
    private executionFactory;
    operationHandlerInvocationFactory: OperationHandlerInvocationFactory;
    constructor(httpClient: HttpClient, fileStorage: FileStorage);
    lookup<AUTH extends OperationHandlerAuth<unknown, unknown>, IN, OUT>(handlerReference: OperationHandlerReference<AUTH, IN, OUT>, includePrivate: boolean): O.Option<OperationExecution<AUTH, IN, OUT>>;
}
//# sourceMappingURL=OperationExecutionGateway.d.ts.map