"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WinstonCliLogging = void 0;
const CliLogging_1 = require("@trayio/commons/cli/CliLogging");
const json_colorizer_1 = __importDefault(require("json-colorizer"));
const winston_1 = require("winston");
const chalk_1 = __importDefault(require("chalk"));
class WinstonCliLogging {
    logger;
    constructor() {
        const logFormatter = (info) => {
            if (typeof info.message === 'object') {
                const messageStr = JSON.stringify(info.message, null, 2);
                return (0, json_colorizer_1.default)(messageStr, {
                    colors: {
                        STRING_KEY: 'white',
                        STRING_LITERAL: 'green',
                        NUMBER_LITERAL: 'yellow',
                        BRACE: 'gray',
                        BRACKET: 'white',
                        COLON: 'gray',
                        COMMA: 'gray',
                        BOOLEAN_LITERAL: 'yellow',
                        NULL_LITERAL: 'blue',
                    },
                });
            }
            return info.message;
        };
        this.logger = (0, winston_1.createLogger)({
            level: 'info',
            format: winston_1.format.combine(winston_1.format.splat(), winston_1.format.printf(logFormatter)),
            transports: [new winston_1.transports.Console()],
        });
    }
    log(message) {
        this.logger.info(message);
    }
    logBlock(message, color) {
        let messageBlock;
        switch (color) {
            case CliLogging_1.CliColors.blue:
                messageBlock = chalk_1.default.white.bgBlue(` ${message} `);
                break;
            case CliLogging_1.CliColors.red:
                messageBlock = chalk_1.default.white.bgRed(` ${message} `);
                break;
            case CliLogging_1.CliColors.yellow:
                messageBlock = chalk_1.default.white.bgYellow(` ${message} `);
                break;
            default:
                messageBlock = chalk_1.default.white.bgBlue(` ${message} `);
                break;
        }
        this.logger.info(messageBlock);
    }
}
exports.WinstonCliLogging = WinstonCliLogging;
