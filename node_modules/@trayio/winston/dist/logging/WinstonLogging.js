"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLogger = void 0;
const winston_1 = require("winston");
class WinstonLogging {
    winstonLogger;
    context;
    constructor(context = {}) {
        this.winstonLogger = (0, winston_1.createLogger)({
            format: winston_1.format.json(),
            exitOnError: false,
            transports: [new winston_1.transports.Console()],
        });
        this.context = this.getDefaultContext(context);
    }
    info(message, context) {
        this.winstonLogger.info(message, { ...this.context, ...context });
    }
    debug(message, context) {
        this.winstonLogger.debug(message, { ...this.context, ...context });
    }
    error(message, context) {
        this.winstonLogger.error(message, { ...this.context, ...context });
    }
    warning(message, context) {
        this.winstonLogger.warn(message, { ...this.context, ...context });
    }
    getDefaultContext(context) {
        context.service = process.env.npm_package_name;
        return context;
    }
}
const getLogger = (context = {}) => new WinstonLogging(context);
exports.getLogger = getLogger;
