import * as TE from 'fp-ts/TaskEither';
import { HttpClient } from '@trayio/commons/http/HttpClient';
import { HttpMethod, HttpRequest, HttpResponse } from '@trayio/commons/http/Http';
import FormData = require('form-data');
import { FileStorage } from '@trayio/commons/file/File';
export declare class AxiosHttpClient implements HttpClient {
    private readonly fileStorage;
    constructor(fileStorage?: FileStorage);
    execute(method: HttpMethod, url: string, request: HttpRequest): TE.TaskEither<Error, HttpResponse>;
    private axiosErrorToHttpResponse;
    private axiosResponseToHttpResponse;
    appendFields: (formData: FormData) => (fields: Record<string, string>) => FormData;
}
//# sourceMappingURL=AxiosHttpClient.d.ts.map